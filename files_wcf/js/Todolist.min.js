var Todolist={Todo:{}};Todolist.Todo.InlineEditor=WCF.InlineEditor.extend({_environment:"todo",_permissions:{},_redirectURL:"",_updateHandler:null,_setOptions:function(){this._environment="todo",this._options=[{label:WCF.Language.get("wcf.global.button.edit"),optionName:"edit",isQuickOption:!0},{label:WCF.Language.get("wcf.global.button.delete"),optionName:"delete"},{optionName:"divider"},{label:WCF.Language.get("todolist.action.markAsDone"),optionName:"markAsDone"},{label:WCF.Language.get("todolist.action.markAsUndone"),optionName:"markAsUndone"}]},setUpdateHandler:function(t){this._updateHandler=t},_getTriggerElement:function(t){return t.find(".jsTodoInlineEditor")},_show:function(t){var e=$(t.currentTarget).data("elementID"),o=null;return this._dropdowns[e]||(o=this._getTriggerElement(this._elements[e]).addClass("dropdownToggle"),o.parent().addClass("dropdown"),this._dropdowns[e]=$('<ul class="dropdownMenu" />').insertAfter(o)),this._super(t),null!==o&&WCF.Dropdown.initDropdown(o,!0),!1},_validate:function(t,e){var o=$("#"+t).data("todoID");switch(e){case"delete":return!!this._getPermission("canDeleteTodo");case"markAsDone":return!!this._getPermission("canMarkAsDone")&&!this._updateHandler.getValue(o,"isDone");case"markAsUndone":return!!this._getPermission("canMarkAsDone")&&this._updateHandler.getValue(o,"isDone");case"edit":return!0}return!1},_execute:function(t,e){if(!this._validate(t,e))return!1;switch(e){case"delete":var o=this;WCF.System.Confirmation.show(WCF.Language.get("todolist.action.confirmDelete"),function(a){"confirm"===a&&o._updateTodo(t,e,{deleted:1})});break;case"markAsDone":case"markAsUndone":this._updateTodo(t,e,{isDone:"markAsDone"===e?1:0});break;case"edit":window.location=this._getTriggerElement($("#"+t)).prop("href");break;default:return!1}return!0},_updateTodo:function(t,e,o){if("delete"===e){var a=this,n=this._elements[t].data("todoID");new WCF.Action.Proxy({autoSend:!0,data:{actionName:e,className:"todolist\\data\\todo\\TodoAction",objectIDs:[n]},success:function(t){a._updateHandler.update(n,t.returnValues.todoData[n])}})}else this._updateData.push({data:o,elementID:t,optionName:e}),this._proxy.setOption("data",{actionName:e,className:"todolist\\data\\todo\\TodoAction",objectIDs:[this._elements[t].data("todoID")],parameters:{data:o}}),this._proxy.sendRequest()},_updateState:function(t){this._notification.show();for(var e=0,o=this._updateData.length;e<o;e++){var a=this._updateData[e],n=$("#"+a.elementID).data("todoID"),s=a.data;this._updateHandler.update(n,s)}},_getPermission:function(t){return this._permissions[t]?this._permissions[t]:0},setRedirectURL:function(t){this._redirectURL=t},setPermission:function(t,e){this._permissions[t]=e},setPermissions:function(t){for(var e in t)this.setPermission(e,t[e])}}),Todolist.Todo.UpdateHandler=Class.extend({_todos:{},_markAsDoneHandler:null,init:function(){var t=this;$(".todoHeader").each(function(e,o){var a=$(o);t._todos[a.data("objectID")]=a})},setMarkAsDoneHandler:function(t){this._markAsDoneHandler=t},update:function(t,e){if(this._todos[t])for(var o in e)this._updateProperty(t,o,e[o]);else console.debug("[Todolist.Todo.UpdateHandler] Unknown todo id "+t)},_updateProperty:function(t,e,o){switch(e){case"deleted":this._delete(t,o);break;case"isDone":o?this._markAsDone(t):this._markAsUndone(t);break;default:this._handleCustomProperty(t,e,o)}},_handleCustomProperty:function(t,e,o){this._todos[t].trigger("todoUpdateHandlerProperty",[t,e,o])},_delete:function(t,e){},_markAsDone:function(t){this._todos[t].data("isDone",1)},_markAsUndone:function(t){this._todos[t].data("isDone",0)},getValue:function(t,e){if(this._todos[t])switch(e){case"isDone":return this._todos[t].data("isDone")}else console.debug("[Todolist.Todo.UpdateHandler] Unknown todo id "+t)}}),Todolist.Todo.UpdateHandler.Todo=Todolist.Todo.UpdateHandler.extend({_delete:function(t,e){new WCF.PeriodicalExecuter(function(t){t.stop(),window.location=e},1e3)},_markAsUndone:function(t){this._super(t),$(".jsMarkAsDone .doneTitle").text(WCF.Language.get("todolist.general.isUndone")),$(".jsMarkAsDone span:not(.doneTitle)").html('<fa-icon name="check-square"></fa-icon>').attr("aria-label",WCF.Language.get("todolist.general.isUndone")).attr("data-tooltip",WCF.Language.get("todolist.general.isUndone"))},_markAsDone:function(t){this._super(t),$(".jsMarkAsDone .doneTitle").text(WCF.Language.get("todolist.general.isDone")),$(".jsMarkAsDone span:not(.doneTitle)").html('<fa-icon name="check-square"></fa-icon>').attr("aria-label",WCF.Language.get("todolist.general.isDone")).attr("data-tooltip",WCF.Language.get("todolist.general.isDone"))}}),Todolist.Todo.UpdateHandler.Todolist=Todolist.Todo.UpdateHandler.extend({_markAsUndone:function(t){this._super(t),$(".jsMarkAsDone[data-object-id="+t+"]").html('<fa-icon name="square"></fa-icon>').attr("aria-label",WCF.Language.get("todolist.general.isUndone")).attr("data-tooltip",WCF.Language.get("todolist.general.isUndone"))},_markAsDone:function(t){this._super(t),$(".jsMarkAsDone[data-object-id="+t+"]").html('<fa-icon name="check-square"></fa-icon>').attr("aria-label",WCF.Language.get("todolist.general.isDone")).attr("data-tooltip",WCF.Language.get("todolist.general.isDone"))}}),Todolist.Todo.MarkAsDone=Class.extend({_proxy:null,_updateHandler:null,_todos:{},init:function(t){this._updateHandler=t,this._todos={},this._proxy=new WCF.Action.Proxy({success:$.proxy(this._success,this)});var e=this;$(".todoHeader").each(function(t,o){var a=$(o),n=a.data("todoID");e._todos[n]=a,a.data("canMarkAsDone")&&e.watch(n)}),this._updateHandler.setMarkAsDoneHandler(this)},watch:function(t){this._todos[t]&&this._todos[t].data("canMarkAsDone")&&this._todos[t].find(".jsMarkAsDone").data("todoID",t).click($.proxy(this._click,this))},_click:function(t){var e=$(t.currentTarget);if("LI"==e[0].nodeName)var o=!!e.find(".fa-check-square-o").length;else o=!!e.hasClass("fa-check-square-o");this._proxy.setOption("data",{actionName:"markAs"+(o?"Undone":"Done"),className:"todolist\\data\\todo\\TodoAction",objectIDs:[e.data("todoID")]}),this._proxy.sendRequest(),o?this._updateHandler._markAsUndone(e.data("todoID")):this._updateHandler._markAsDone(e.data("todoID"))},_success:function(t,e,o){for(var a in t.returnValues.todoData)this._updateHandler.update(a,t.returnValues.todoData[a])}});