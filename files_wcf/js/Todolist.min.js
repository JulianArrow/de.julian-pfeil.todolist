var Todolist={Todo:{}};Todolist.Todo.InlineEditor=WCF.InlineEditor.extend({_environment:"todo",_permissions:{},_redirectURL:"",_updateHandler:null,_setOptions:function(){this._environment="todo",this._options=[{label:WCF.Language.get("wcf.global.button.edit"),optionName:"edit",isQuickOption:!0},{label:WCF.Language.get("wcf.global.button.delete"),optionName:"delete"},{optionName:"divider"},{label:WCF.Language.get("todolist.action.markAsDone"),optionName:"markAsDone"},{label:WCF.Language.get("todolist.action.markAsUndone"),optionName:"markAsUndone"}]},setUpdateHandler:function(e){this._updateHandler=e},_getTriggerElement:function(e){return e.find(".jsTodoInlineEditor")},_show:function(e){var t=$(e.currentTarget).data("elementID"),o=null;return this._dropdowns[t]||(o=this._getTriggerElement(this._elements[t]).addClass("dropdownToggle"),o.parent().addClass("dropdown"),this._dropdowns[t]=$('<ul class="dropdownMenu" />').insertAfter(o)),this._super(e),null!==o&&WCF.Dropdown.initDropdown(o,!0),!1},_validate:function(e,t){var o=$("#"+e).data("todoID");switch(t){case"delete":return!!this._getPermission("canDeleteTodo");case"markAsDone":return!!this._getPermission("canMarkAsDone")&&!this._updateHandler.getValue(o,"isDone");case"markAsUndone":return!!this._getPermission("canMarkAsDone")&&this._updateHandler.getValue(o,"isDone");case"edit":return!0}return!1},_execute:function(e,t){if(!this._validate(e,t))return!1;switch(t){case"delete":var o=this;WCF.System.Confirmation.show(WCF.Language.get("todolist.action.confirmDelete"),function(a){"confirm"===a&&o._updateTodo(e,t,{deleted:1})});break;case"markAsDone":case"markAsUndone":this._updateTodo(e,t,{isDone:"markAsDone"===t?1:0});break;case"edit":window.location=this._getTriggerElement($("#"+e)).prop("href");break;default:return!1}return!0},_updateTodo:function(e,t,o){if("delete"===t){var a=this,n=this._elements[e].data("todoID");new WCF.Action.Proxy({autoSend:!0,data:{actionName:t,className:"todolist\\data\\todo\\TodoAction",objectIDs:[n]},success:function(e){a._updateHandler.update(n,e.returnValues.todoData[n])}})}else this._updateData.push({data:o,elementID:e,optionName:t}),this._proxy.setOption("data",{actionName:t,className:"todolist\\data\\todo\\TodoAction",objectIDs:[this._elements[e].data("todoID")],parameters:{data:o}}),this._proxy.sendRequest()},_updateState:function(e){this._notification.show();for(var t=0,o=this._updateData.length;t<o;t++){var a=this._updateData[t],n=$("#"+a.elementID).data("todoID"),s=a.data;this._updateHandler.update(n,s)}},_getPermission:function(e){return this._permissions[e]?this._permissions[e]:0},setRedirectURL:function(e){this._redirectURL=e},setPermission:function(e,t){this._permissions[e]=t},setPermissions:function(e){for(var t in e)this.setPermission(t,e[t])}}),Todolist.Todo.UpdateHandler=Class.extend({_todos:{},_markAsDoneHandler:null,init:function(){var e=this;$(".todoHeader").each(function(t,o){var a=$(o);e._todos[a.data("objectID")]=a})},setMarkAsDoneHandler:function(e){this._markAsDoneHandler=e},update:function(e,t){if(this._todos[e])for(var o in t)this._updateProperty(e,o,t[o]);else console.debug("[Todolist.Todo.UpdateHandler] Unknown todo id "+e)},_updateProperty:function(e,t,o){switch(t){case"deleted":this._delete(e,o);break;case"isDone":o?this._markAsDone(e):this._markAsUndone(e);break;default:this._handleCustomProperty(e,t,o)}},_handleCustomProperty:function(e,t,o){this._todos[e].trigger("todoUpdateHandlerProperty",[e,t,o])},_delete:function(e,t){},_markAsDone:function(e){this._todos[e].data("isDone",1)},_markAsUndone:function(e){this._todos[e].data("isDone",0)},getValue:function(e,t){if(this._todos[e])switch(t){case"isDone":return this._todos[e].data("isDone")}else console.debug("[Todolist.Todo.UpdateHandler] Unknown todo id "+e)}}),Todolist.Todo.UpdateHandler.Todo=Todolist.Todo.UpdateHandler.extend({_delete:function(e,t){new WCF.PeriodicalExecuter(function(e){e.stop(),window.location=t},1e3)},_markAsUndone:function(e){this._super(e),$(".jsMarkAsDone .doneTitle").text(WCF.Language.get("todolist.general.isUndone")),$(".jsMarkAsDone .icon").removeClass("fa-check-square-o").addClass("fa-square-o").attr("aria-label",WCF.Language.get("todolist.general.isUndone")).attr("data-tooltip",WCF.Language.get("todolist.general.isUndone"))},_markAsDone:function(e){this._super(e),$(".jsMarkAsDone .doneTitle").text(WCF.Language.get("todolist.general.isDone")),$(".jsMarkAsDone .icon").addClass("fa-check-square-o").removeClass("fa-square-o").attr("aria-label",WCF.Language.get("todolist.general.isDone")).attr("data-tooltip",WCF.Language.get("todolist.general.isDone"))}}),Todolist.Todo.UpdateHandler.Todolist=Todolist.Todo.UpdateHandler.extend({_markAsUndone:function(e){this._super(e),$("[data-todo-id="+e+"] .jsMarkAsDone.icon").removeClass("fa-check-square-o").addClass("fa-square-o").attr("aria-label",WCF.Language.get("todolist.general.isUndone")).attr("data-tooltip",WCF.Language.get("todolist.general.isUndone"))},_markAsDone:function(e){this._super(e),$("[data-todo-id="+e+"] .jsMarkAsDone.icon").addClass("fa-check-square-o").removeClass("fa-square-o").attr("aria-label",WCF.Language.get("todolist.general.isDone")).attr("data-tooltip",WCF.Language.get("todolist.general.isDone"))}}),Todolist.Todo.MarkAsDone=Class.extend({_proxy:null,_updateHandler:null,_todos:{},init:function(e){this._updateHandler=e,this._todos={},this._proxy=new WCF.Action.Proxy({success:$.proxy(this._success,this)});var t=this;$(".todoHeader").each(function(e,o){var a=$(o),n=a.data("todoID");t._todos[n]=a,a.data("canMarkAsDone")&&t.watch(n)}),this._updateHandler.setMarkAsDoneHandler(this)},watch:function(e){this._todos[e]&&this._todos[e].data("canMarkAsDone")&&this._todos[e].find(".jsMarkAsDone").data("todoID",e).click($.proxy(this._click,this))},_click:function(e){var t=$(e.currentTarget);if("LI"==t[0].nodeName)var o=!!t.find(".fa-check-square-o").length;else o=!!t.hasClass("fa-check-square-o");this._proxy.setOption("data",{actionName:"markAs"+(o?"Undone":"Done"),className:"todolist\\data\\todo\\TodoAction",objectIDs:[t.data("todoID")]}),this._proxy.sendRequest(),o?this._updateHandler._markAsUndone(t.data("todoID")):this._updateHandler._markAsDone(t.data("todoID"))},_success:function(e,t,o){for(var a in e.returnValues.todoData)this._updateHandler.update(a,e.returnValues.todoData[a])}});